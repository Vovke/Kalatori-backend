name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build release binary
        run: |
          cargo build --release
          mkdir -p dist
          cp target/release/kalatori dist/

      - name: Extract changelog section
        run: |
          # Define tag as version
          VERSION=${{ github.ref_name }}
          # Remove the leading 'v' from the version tag
          CLEAN_VERSION=$(echo $VERSION | sed 's/^v//')

          # Extract the changelog section for the specific version
          awk "/## \\[$CLEAN_VERSION\\]/, /^## \\[/" CHANGELOG.md | sed '$d' > dist/CHANGELOG_${VERSION}.md

          # Check the result
          echo "Extracted changelog:"
          cat dist/CHANGELOG_${VERSION}.md

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kalatori-${{ github.ref_name }}
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body_path: dist/CHANGELOG_${{ github.ref_name }}.md
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/kalatori
          asset_name: kalatori-${{ github.ref_name }}-linux-x86_64
          asset_content_type: application/octet-stream
